// =============================================
//zless修改而来
// @des:            
// @author:       	will
// @url:            
// @time:           2016-09-06
// @lastTime     	
// @version       	
// =============================================

// common reset use kissy reset

.mob-set(){
    html{font-size:100px; background:#fff;}
body{font-size:24px}
@media screen and (min-width:320px){html{font-size:42.66px}body{font-size:12px}}
@media screen and (min-width:360px){html{font-size:48px}body{font-size:12px}}
@media screen and (min-width:375px){html{font-size:50px}body{font-size:12px}}
@media screen and (min-width:384px){html{font-size:51.2px}body{font-size:14px}}
@media screen and (min-width:400px){html{font-size:53.33px}body{font-size:14px}}
@media screen and (min-width:414px){html{font-size:55.2px}body{font-size:14px}}
@media screen and (min-width:424px){html{font-size:56.53px}body{font-size:14px}}
@media screen and (min-width:480px){html{font-size:64px}body{font-size:15.36px}}
@media screen and (min-width:540px){html{font-size:72px}body{font-size:17.28px}}
@media screen and (min-width:720px){html{font-size:96px}body{font-size:23.04px}}
@media screen and (min-width:750px){html{font-size:100px}body{font-size:24px}}
}
.reset-m(){
html, body, div, span, object, h1, h2, h3, h4, h5, h6, p, a, address, cite, del, em, img, q, u, i, dl, dt, dd, ol, ul, li, form, label, table, tr, th, td,caption, tbody, tfoot, thead, article, aside, details, summary, figure, figcaption, footer, header, menu, nav, section, audio, input, select, textarea {margin:0;padding:0;border:0;}
header,footer,nav,section,menu,article,aside { display:block;}
body { font-size: 1em; line-height: .8rem; font-family:"Microsoft YaHei",Arial,Helvetica,sans-serif; color:#333; min-width: 320px; max-width: 750px; margin: 0 auto; cursor:default; word-break:break-all;  white-space:normal; -webkit-tap-highlight-color:rgba(255,255,255,0); -webkit-overflow-scrolling:touch; -webkit-tap-highlight-color: transparent;}
h1, h2, h3, h4, h5, h6 {font-weight: normal;}
a { color:#555; text-decoration:none;}
a:hover {text-decoration:none; color:#f93684;}
a:active {color:#777; text-decoration:none; opacity: .8;}
img, input, select, textarea {font-size:100%;font-family:"Microsoft YaHei";}
img { vertical-align: top; max-width: 100%;}
table {border-collapse:collapse; border-spacing:0;}
ol, ul {list-style: none;}
i,em,cite { font-style:normal;}
:focus {outline: none;}
input[type="submit"],input[type="reset"],input[type="button"],button { -webkit-appearance: none; }
.clearfix:after { clear:both; content:""; height:0; visibility:hidden; font-size:0; line-height:0; display:block;}
.clearfix { zoom:1;}
::-webkit-input-placeholder { color: #aaa;}
*{outline: none; box-sizing: border-box; -webkit-box-sizing: border-box;}
.d-webkit { /*display:-moz-box;display:-webkit-box;display:box;*/display: flex}
.box-flex {-moz-box-flex:1;-webkit-box-flex:1;box-flex:1; flex:1; }
}
.reset(){
 html, body, div, iframe, h1, h2, h3, h4, h5, h6, p, a, del, em, b, i, s, img, strong, dd, dl, dt,  ol, ul, li, label, form, table, tbody, thead, tr, th, td, address, span, cite { margin:0; padding:0; border:medium none; }
body { font-size:12px; color:#000; _word-break:break-all;white-space:normal;font-family:"microsoft yahei","微软雅黑",Arial,Helvetica,sans-serif;}
h1, h2, h3, h4, h5, h6 {font-size:100%;}
  ul,ol{list-style:none;}
  img{border:none;}
  input,select,textarea{outline:none; border:none; background:none;}
  textarea{resize:none;}
  a{text-decoration:none;}
    a,label {blr:~'expression(this.onFocus=this.blur())'}
  a,label {outline:none;}
}
.reset-sina(){
  html, body, ul, li, ol, dl, dd, dt, p, h1, h2, h3, h4, h5, h6, form, fieldset, legend, img { margin:0; padding:0; }
  fieldset, img { border:none; }
  img{display: block;}
  address, caption, cite, code, dfn, th, var { font-style:normal; font-weight:normal; }
  ul, ol { list-style:none; }
  input { padding-top:0; padding-bottom:0; font-family: "SimSun","宋体";}
  input::-moz-focus-inner { border:none; padding:0; }
  select, input { vertical-align:middle; }
  select, input, textarea { font-size:12px; margin:0; }
  input[type="text"], input[type="password"], textarea { outline-style:none; -webkit-appearance:none; }
  textarea { resize:none; }
  input,textarea{background: none; border: none;}
  table { border-collapse:collapse; }
  body { color:#333; font:12px/20px "SimSun","宋体","Arial Narrow",HELVETICA; background:#fff; }
  a { color:#666; text-decoration:none; }
  a:visited { color:#666; }
  a:hover, a:active, a:focus { color:#ff8400; text-decoration:underline; }
}
//去除a和label的虚线
.remove_dotted(){
  a,label {blr:~'expression(this.onFocus=this.blur())'}
  a,label {outline:none;}
}
//浮动
.fl(@f:left;){
    float: @f;
    display: inline;
}
.fr(@f:right){
  float: @f;
  display: inline;
}
//定位
.por(@rel:relative){
  position: @rel;
}
.poa(@abs:absolute){
  position: @abs;
}
.pof(@fix:fixed){
  position: @fix;
}
.poss(@sta:static){
 position:@sta;   
}
//全局定位
.pos (r){
  position: relative;
}
.pos (a){
  position: absolute;
}
.pos (f){
  position: fixed;
}
.pos (s){
  position:static;
}
.poa-box(@w:500px,@h:400px,@pos:absolute){
  width: @w;
  height: @h;
  position: @pos;
  left:0;
  top:0;
}
//定位居中
.pos-box-c(@w:600px,@h:360px,@pos:absolute){
  width: @w;
  height: @h;
  position: @pos;
  left: 50%;
  top: 50%;
  margin-left: -@w / 2;
  margin-top: -@h / 2;
}
//布局
.ma0a(){
  margin:0 auto; 
}
.ma0a-w(@w:500px){
  width: @w;
  .ma0a();
}
.wh(@w){
  width: @w;
  height: @w;
}
.w-be-h(@w){
  width: @w;
  height: @w;
}
.z-index(@index:1){
  z-index: @index;
}
//高度100%
.h100(){
  height: 100%;
}
//高度100%
.w100(){
  width: 100%;
}
//文字垂直居中
.txt-m(@h){
  height: @h;
  line-height: @h;
}
// 同.txt-m
.l-h(@h)
{
  height: @h;
  line-height: @h;
}
//display
.disb(){
  display: block;
}
.disi(){
  display: inline;
}
.disib(){
  display: inline-block;
  *display: inline;
  *zoom:1;
}
.dist(){
  display:table;
}
.distc(){
  display:table-cell;
}
.disn(){
  display: none;
}
//font family
.font-m(){
  font-family: "Microsoft Yahei","微软雅黑";
}
.font-s(){
  font-family: "SimSun","宋体";
}
.font-a(){
  font-family: "Arial";
}
.font-v(){
  font-family:Verdana;
}
.font-v(){
  font-family:Verdana;
}
//.font-mac(){
//  font-family: "Hiragino Sans GB","Hiragino Sans GB W3","GothamThin","HeitiSC-Light","Microsoft Yahei","微软雅黑","MicrosoftJhengHei","Simhei","sans-serif ";-webkit-font-smoothing: antialiased;}
//}

//font weight
.fw800(){
  font-weight: 800;
}
.fwb(){
  font-weight: bold;
}
.fw400(){
  font-weight: 400;
}
.fwn(){
  font-weight: normal;
}
//font size
.fsz(@p: 12px){
  font-size: @p;
}
.fsz0(){font-size: 0px;}
.fsz1(){font-size: 1px;}
.fsz2(){font-size: 2px;}
.fsz3(){font-size: 3px;}
.fsz4(){font-size: 4px;}
.fsz5(){font-size: 5px;}
.fsz6(){font-size: 6px;}
.fsz7(){font-size: 7px;}
.fsz8(){font-size: 8px;}
.fsz9(){font-size: 9px;}
.fsz10(){font-size: 10px;}
.fsz11(){font-size: 11px;}
.fsz12(){font-size: 12px;}
.fsz13(){font-size: 13px;}
.fsz14(){font-size: 14px;}
.fsz15(){font-size: 15px;}
.fsz16(){font-size: 16px;}
.fsz17(){font-size: 17px;}
.fsz18(){font-size: 18px;}
.fsz19(){font-size: 19px;}
.fsz20(){font-size: 20px;}
.fsz21(){font-size: 21px;}
.fsz22(){font-size: 22px;}
.fsz23(){font-size: 23px;}
.fsz24(){font-size: 24px;}
.fsz25(){font-size: 25px;}
.fsz26(){font-size: 26px;}
.fsz27(){font-size: 27px;}
.fsz28(){font-size: 28px;}
.fsz29(){font-size: 29px;}
.fsz30(){font-size: 30px;}
.fsz31(){font-size: 31px;}
.fsz32(){font-size: 32px;}
.fsz33(){font-size: 33px;}
.fsz34(){font-size: 34px;}
.fsz35(){font-size: 35px;}
.fsz36(){font-size: 36px;}
.fsz37(){font-size: 37px;}
.fsz38(){font-size: 38px;}
.fsz39(){font-size: 39px;}
.fsz40(){font-size: 40px;}
.fsz41(){font-size: 41px;}
.fsz42(){font-size: 42px;}
.fsz43(){font-size: 43px;}
.fsz44(){font-size: 44px;}
.fsz45(){font-size: 45px;}
.fsz46(){font-size: 46px;}
.fsz47(){font-size: 47px;}
.fsz48(){font-size: 48px;}
.fsz49(){font-size: 49px;}
.fsz50(){font-size: 50px;}
.fsz51(){font-size: 51px;}
.fsz52(){font-size: 52px;}
.fsz53(){font-size: 53px;}
.fsz54(){font-size: 54px;}
.fsz55(){font-size: 55px;}
.fsz56(){font-size: 56px;}
.fsz57(){font-size: 57px;}
.fsz58(){font-size: 58px;}
.fsz59(){font-size: 59px;}
.fsz60(){font-size: 60px;}
.fsz61(){font-size: 61px;}
.fsz62(){font-size: 62px;}
.fsz63(){font-size: 63px;}
.fsz64(){font-size: 64px;}
.fsz65(){font-size: 65px;}
.fsz66(){font-size: 66px;}
.fsz67(){font-size: 67px;}
.fsz68(){font-size: 68px;}
.fsz69(){font-size: 69px;}
.fsz70(){font-size: 70px;}
.fsz71(){font-size: 71px;}
.fsz72(){font-size: 72px;}
.fsz73(){font-size: 73px;}
.fsz74(){font-size: 74px;}
.fsz75(){font-size: 75px;}
.fsz76(){font-size: 76px;}
.fsz77(){font-size: 77px;}
.fsz78(){font-size: 78px;}
.fsz79(){font-size: 79px;}
.fsz80(){font-size: 80px;}
.fsz81(){font-size: 81px;}
.fsz82(){font-size: 82px;}
.fsz83(){font-size: 83px;}
.fsz84(){font-size: 84px;}
.fsz85(){font-size: 85px;}
.fsz86(){font-size: 86px;}
.fsz87(){font-size: 87px;}
.fsz88(){font-size: 88px;}
.fsz89(){font-size: 89px;}
.fsz90(){font-size: 90px;}
.fsz91(){font-size: 91px;}
.fsz92(){font-size: 92px;}
.fsz93(){font-size: 93px;}
.fsz94(){font-size: 94px;}
.fsz95(){font-size: 95px;}
.fsz96(){font-size: 96px;}
.fsz97(){font-size: 97px;}
.fsz98(){font-size: 98px;}
.fsz99(){font-size: 99px;}
.fsz100(){font-size: 100px;}

//background
.bg(@url)
{
  background: url(@url) 0 0 repeat;
}
.bg-m(@url,@x:0,@y:0,@repeat:no-repeat)
{
  background: url(@url) @x @y @repeat;
}
.bgi(@url)
{
  background-image: url(@url);
}
.bgp(@x:0,@y:0){
  background-position: @x @y;
}
.bgr-r(){
  background-repeat: repeat;
}
.bgr-x(){
  background-repeat: repeat-x;
}
.bgr-y(){
  background-repeat: repeat-y;
}
.bgr-no(){
  background-repeat: no-repeat;
}
.bga-fix(){
  background-attachment: fixed;
}
.bg-w(){
    background:#fff;
}
.bg-b(){
    background:#000;
}
.bg-r(){
    background:#f00;
}
.bg-g(){
    background:#5eb95e;
}
.bg-h(){
    background:#e6e6e6;
}
.bg-c(@c:#fff){
    background:@c;
}

.bg-scon(){
    background-size:contain;
}
.bg-scov(){
    background-size:cover;
}

//text
.text-d(@p: none){
  text-decoration: @p;
}
//添加下划线
.text-du(){
  text-decoration: underline;
}
.text-dl(){
  text-decoration:line-through;
}
.text-do(){
  text-decoration:overline;
}
.text-n(){
  text-decoration: none;
}
.tal(){
  text-align: left;
}
.text-l(){
  text-align: left;
}
.tac(){
  text-align: center;
}
.text-c(){
  text-align: center;
}
.tar(){
  text-align: right;
}
.text-r(){
  text-align: right;
}
.texi(@em:2em){
   text-indent:@em; 
}
.texi2(){
   text-indent:2em; 
}
.texi0(){
   text-indent:0; 
}
.text-over(){
     text-overflow: ellipsis; white-space: nowrap;
}
.t-over2(){
    overflow : hidden;text-overflow: ellipsis;display: -webkit-box;-webkit-line-clamp: 2;-webkit-box-orient: vertical;
}
.t-overi(@i:2){
    overflow : hidden;text-overflow: ellipsis;display: -webkit-box;-webkit-line-clamp:@i;-webkit-box-orient: vertical;
}
.nowrap(){
   white-space: nowrap;
}
.color-w(){
    color:#fff;
}
.color-b(){
    color:#000;
}
.color-r(){
    color:#f00;
}
.color-g(){
    color:#5eb95e;
}
.color-h(){
    color:#e6e6e6;
}
.color-c(@c:#fff){
    color:@c;
}
.vat(){
    vertical-align: top;
}
.vam(){
    vertical-align:middle;
}
.vab(){
    vertical-align:bottom;
}
//特殊需求
.min-width(@width){
  min-width: @width;
  _width:@width;
}
.max-width(@width,@id){
  max-width: @width;
  _width:~'expression(document.getElementById("@{id}").offsetHeight>parseInt("@{width}")?"@{width}": "auto")';
  overflow:hidden;
}
.min-height(@height){
  min-height: @height;
  _height:@height;
}
.max-height(@height,@id){
  max-height: @height;
  _height:~'expression(document.getElementById("@{id}").offsetHeight>parseInt("@{height}")?"@{height}": "auto")';
  overflow:hidden;
}
//三角
.triangle (top,@w:5px,@color:#ccc){
  border-style:solid dashed dashed dashed;
  border-color:@color transparent transparent transparent;
  border-width:@w;
}
.triangle (right,@w:5px,@color:#ccc){
  border-style:dashed solid dashed dashed;
  border-color:transparent @color transparent transparent;
  border-width:@w;
}
.triangle (bottom,@w:5px,@color:#ccc){
  border-style:dashed dashed solid dashed;
  border-color:transparent transparent @color transparent;
  border-width:@w;
}
.triangle (left,@w:5px,@color:#ccc){
  border-style:dashed dashed dashed solid;
  border-color:transparent transparent transparent @color;
  border-width:@w;
}
.triangle (@_,@w:5px,@color:#ccc){
  .triangle-compatible();
}
//边框附加内容
.triangle-compatible()
{
    width: 0; height: 0; overflow:hidden;
}
//单独方向
.triangle-b(@w:5px,@color:#ccc){
  border-style:solid dashed dashed dashed;
  border-color:@color transparent transparent transparent;
  border-width:@w;
  .triangle-compatible();
}
.triangle-l(@w:5px,@color:#ccc){
  border-style:dashed solid dashed dashed;
  border-color:transparent @color transparent transparent;
  border-width:@w;
  .triangle-compatible();
}
.triangle-t(@w:5px,@color:#ccc){
  border-style:dashed dashed solid dashed;
  border-color:transparent transparent @color transparent;
  border-width:@w;
  .triangle-compatible();
}
.triangle-r(@w:5px,@color:#ccc){
  border-style:dashed dashed dashed solid;
  border-color:transparent transparent transparent @color;
  border-width:@w;
  .triangle-compatible();
}
//透明度
.opa(@opacity: 80) {
  opacity: @opacity / 100;
  filter: ~"alpha(opacity=@{opacity})";
}
.rgba(@red, @green, @blue, @alpha:1){
        @filtercolor:`(_f = function(d){ var v = (parseInt(d)|0).toString(16);return v.length<2 ? "0"+v : v;},
                                        '#'+_f(@{alpha}*255) + _f(@{red}) + _f(@{green})+ _f(@{blue}))`;
        
        background-color: ~'rgba(@{red},@{green},@{blue},@{alpha})';
        -ms-filter:~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{filtercolor}',endColorstr='@{filtercolor}')";
        filter:~"progid:DXImageTransform.Microsoft.gradient(startColorstr='@{filtercolor}',endColorstr='@{filtercolor}')";        
}

.clearfix() {
  *zoom: 1;
  &:before,
  &:after {
    display: table;
    content: "";
  }
  &:after {
    clear: both;
  }
}
//文字省略号
// @substract单位为%
.ellipsis-basic(){
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  .font-fa();
}
.ellipsis(@substract:0) {
  .ellipsis-basic();
  width:100% - @substract;
}

// =============================================
// .jumbotron {
//   .retina-image("/img/bg-1x.png", "/img/bg-2x.png", 100px, 100px);
// }
// =============================================


.retina-image(@file-1x, @file-2x, @width-1x, @height-1x) {
  background-image: url("@{file-1x}");

  @media
  only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (   min--moz-device-pixel-ratio: 2),
  only screen and (     -o-min-device-pixel-ratio: 2/1),
  only screen and (        min-device-pixel-ratio: 2),
  only screen and (                min-resolution: 192dpi),
  only screen and (                min-resolution: 2dppx) {
    background-image: url("@{file-2x}");
    background-size: @width-1x @height-1x;
  }
}

// =============================================
// 创建24列 自适应流式布局
// HTML结构:
// <div class="vl-fluid"> <div class="row-fluid"> <div class="span span6 first-child"></div> <div class="span span6"></div> <div class="span span6"></div> <div class="span span6"></div> </div> <div class="row-fluid"> <div class="span span8 first-child"></div> <div class="span span8"></div> <div class="span span8"></div> </div> <div class="row-fluid"> <div class="span span12 first-child"></div> <div class="span span12"></div> </div> </div>
// =============================================

.makeFluid(@colnum: 24, @colwidth: 30px, @margin: 10px){
  @gridColumns:             @colnum;
  @gridColumnWidth:         @colwidth;
  @gridGutterWidth:         @margin;
  @gridRowWidth:            (@gridColumns * @gridColumnWidth) + (@gridGutterWidth * (@gridColumns - 1));
  @fluidGridColumnWidth:    percentage(@gridColumnWidth/@gridRowWidth);
  @fluidGridGutterWidth:    percentage(@gridGutterWidth/@gridRowWidth);
  .fluid (@fluidGridColumnWidth, @fluidGridGutterWidth) {

    .spanX (@index) when (@index > 0) {
      .span@{index} { .span(@index); }
      .spanX(@index - 1);
    }
    .spanX (0) {}

    .offsetX (@index) when (@index > 0) {
      .offset@{index} { .offset(@index); }
      .offset@{index}:first-child { .offsetFirstChild(@index); }
      .offsetX(@index - 1);
    }
    .offsetX (0) {}

    .offset (@columns) {
      margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) + (@fluidGridGutterWidth*2);
      *margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridRowWidth * 100 * 1%) + (@fluidGridGutterWidth*2) - (.5 / @gridRowWidth * 100 * 1%);
    }

    .offsetFirstChild (@columns) {
      margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) + (@fluidGridGutterWidth);
      *margin-left: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridRowWidth * 100 * 1%) + @fluidGridGutterWidth - (.5 / @gridRowWidth * 100 * 1%);
    }

    .span (@columns) {
      width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1));
      *width: (@fluidGridColumnWidth * @columns) + (@fluidGridGutterWidth * (@columns - 1)) - (.5 / @gridRowWidth * 100 * 1%);
    }

    .row-fluid {
      width: 100%;
      .clearfix();
      .span {
        float: left;
        margin-left: @fluidGridGutterWidth;
        *margin-left: @fluidGridGutterWidth - (.5 / @gridRowWidth * 100 * 1%);
      }
      .first-child {
        margin-left: 0;
      }

      // Space grid-sized controls properly if multiple per line
      .controls-row [class*="span"] + [class*="span"] {
        margin-left: @fluidGridGutterWidth;
      }

      // generate .spanX and .offsetX
      .spanX (@gridColumns);
      .offsetX (@gridColumns);
    }
  }

  .vl-fluid{
    .fluid (@fluidGridColumnWidth, @fluidGridGutterWidth);
  }
}
// =============================================
// 创建栅格布局
// 默认950宽 24列 每列30px 间距10px
// html结构
// <div class="vl-grid"> <div class="row"> <div class="span span6"></div> <div class="span span6"></div> <div class="span span6"></div> <div class="span span6"></div> </div> <div class="row"> <div class="span span24"></div> </div> </div>
// =============================================
//栅格化

.makeGrid(@colnum: 24, @colwidth: 30, @margin: 10px){
  
  //列数
  @gridColumns:             @colnum;
  //每一列宽度
  @gridColumnWidth:         @colwidth;
  //间距
  @gridGutterWidth:         @margin;
  //行宽度 = (列数 * 每一列的宽度 ) + (margin * (列数-1));
  @gridRowWidth:            (@gridColumns * @gridColumnWidth) + (@gridGutterWidth * (@gridColumns - 1));

  //每一列的宽度 间距
  .gridX (@gridColumnWidth, @gridGutterWidth) {
    .spanX (@index) when (@index > 0) {
      .span@{index} { .span(@index); }
      .spanX(@index - 1);
    }
    .spanX (0) {}

    .offsetX (@index) when (@index > 0) {
      .offset@{index} { .offset(@index); }
      .offsetX(@index - 1);
    }
    .offsetX (0) {}

    .offset (@columns) {
      margin-left: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns + 1));
    }

    .span (@columns) {
      width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1));
    }

    .row {
      margin-left: @gridGutterWidth * -1;
      .clearfix();
    }

    .span{
      float: left;
      min-height: 1px; // prevent collapsing columns
      //background-color: #ccc; //this is a test - busy
      margin-left: @gridGutterWidth;
    }

    // generate .spanX and .offsetX
    .spanX (@gridColumns);
    .offsetX (@gridColumns);

  }
  .vl-grid{
    .gridX(@gridColumnWidth, @gridGutterWidth);
  }

}

// =============================================
// 创建Metro风格布局 
// 默认950宽 6列 每列150px 间距10px
// html结构
//<div class="vl-metro"> <div class="row"> <div class="span span2"> <div class="row"> <div class="span span2 line2"></div> <div class="span span2 line1"></div> </div> </div> <div class="span span2"> <div class="row"> <div class="span span1 line2"></div> <div class="span span1"> <div class="row"> <div class="span span1 line1"></div> <div class="span span1 line1"></div> </div> </div> </div> <div class="row"> <div class="span span2 line1"></div> </div> </div> <div class="span span2"> <div class="row"> <div class="span span2 line1"></div> <div class="span span2 line2"></div> </div> </div> </div> </div>
// =============================================

.makeMetro(@colnum: 6, @colwidth: 150px, @margin: 10px){
  
  @gridColumns:             @colnum;
  @gridColumnWidth:         @colwidth;
  @gridGutterWidth:         @margin;
  @gridRowWidth:            (@gridColumns * @gridColumnWidth) + (@gridGutterWidth * (@gridColumns - 1));


  .metroX (@gridColumnWidth, @gridGutterWidth) {
    .spanX (@index) when (@index > 0) {
      .span@{index} { .span(@index); }
      .spanX(@index - 1);
    }
    .spanX (0) {}
    .lineX (@index) when (@index > 0) {
      .line@{index} { .line(@index); }
      .lineX(@index - 1);
    }
    .lineX (0) {}

    .offsetX (@index) when (@index > 0) {
      .offset@{index} { .offset(@index); }
      .offsetX(@index - 1);
    }
    .offsetX (0) {}

    .offset (@columns) {
      margin-left: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns + 1));
    }

    .span (@columns) {
      width: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1));
    }
    .line (@columns){
      height: (@gridColumnWidth * @columns) + (@gridGutterWidth * (@columns - 1));
      margin-bottom: @margin;
    }

    .row {
      margin-left: @gridGutterWidth * -1;
      .clearfix();
    }

    .span{
      float: left;
      min-height: 1px; // prevent collapsing columns
      margin-left: @gridGutterWidth;
    }

    // generate .spanX and .offsetX
    .spanX (@gridColumns);
    .lineX (@gridColumns);
    .offsetX (@gridColumns);

  }
  .vl-metro{
    .metroX(@gridColumnWidth, @gridGutterWidth);
  }

}
@baseFontSize: 100;
.px2rem(@name, @px) {
    @{name}: @px / @baseFontSize * 1rem;
}

// .loop(@i) when (@i < 4) {
//    .icon-pay@{i} {
//        background: url("../images/icon-pay@{i}.png") no-repeat center center;
//        background-size: contain;
//    }
//    .loop(( @i + 1 ));
//}
//.loop(1);
